name: Build and Release Combined Project

on:
    push:
        branches:
            - main

    workflow_dispatch: {}

jobs:
    activation:
        name: Acquire .ulf file
        runs-on: ubuntu-latest
        steps:
            - name: Set up a Node.js environment
              uses: actions/setup-node@v2
              with:
                  node-version: 18

            - name: Install node package, `unity-license-activate`
              run: npm install -g unity-license-activate

            - name: Activate the license
              run: |
                  unity-license-activate "${{ secrets.UNITY_EMAIL }}" "${{ secrets.UNITY_PASSWORD }}" "${{ needs.request_alf.outputs.alf }}"

            - name: Read ulf
              id: ulfRead
              uses: juliangruber/read-file-action@v1.1.4
              with:
                  path: ${{ env.ULF_FILE }}

            - name: Updates secret UNITY_LICENSE
              uses: hmanzur/actions-set-secret@v2.0.0
              with:
                  name: UNITY_LICENSE
                  value: ${{ steps.ulfRead.outputs.content }}
                  token: ${{ secrets.GITHUB_TOKEN }}

    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                targetPlatform:
                    - StandaloneWindows64
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            # Unity Build
            - name: Build Unity project
              uses: webbertakken/unity-builder@v2.0-alpha-6
              with:
                  unityVersion: 2021.1.0f1
                  targetPlatform: ${{ matrix.targetPlatform }}
                  customParameters: -nographics -quit -batchmode -logFile - -manualLicenseFile ${{ needs.acquire_ulf.outputs.unity_license }}

            # Python Build
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.11.4"

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install setuptools wheel

            - name: Build Python package
              run: python setup.py sdist bdist_wheel

            # Package Unity and Python builds together
            - name: Create combined ZIP
              run: |
                  mkdir combined_output
                  cp -r build/${{ matrix.targetPlatform }} combined_output/
                  cp -r dist/* combined_output/
                  zip -r combined_build.zip combined_output/

            - name: Upload Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: combined_build
                  path: combined_build.zip

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Download Artifacts
              uses: actions/download-artifact@v2
              with:
                  name: combined_build

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./combined_build.zip
                  asset_name: combined_build.zip
                  asset_content_type: application/zip
